CREATE DEFINER = `root`
PROCEDURE p1 (
	IN id INTEGER,
	OUT res INTEGER,
	INOUT a INTEGER
) LANGUAGE SQL
DETERMINISTIC CONTAINS SQL
SQL SECURITY INVOKER
AS
BEGIN
	SELECT count(id)
	INTO res
	FROM data
	WHERE data.id > id;
END;
/
CREATE DEFINER = `root`
PROCEDURE p2 () LANGUAGE SQL CONTAINS SQL
SQL SECURITY DEFINER
AS
BEGIN
	CREATE TABLE data2 (
		id INTEGER
	);
END;
/
CREATE PROCEDURE p3 () LANGUAGE SQL
VOLATILE CONTAINS SQL
AS
BEGIN
	DROP TABLE IF EXISTS data1 RESTRICT;
END;
/
CREATE PROCEDURE p4 () LANGUAGE SQL
VOLATILE CONTAINS SQL
AS
BEGIN
	ALTER TABLE "testAlterTable1"
		ADD col0 DECIMAL(4, 2);
END;
/
CREATE PROCEDURE p5 ()
 COMMENT 'good'

VOLATILE
AS
BEGIN
	UPDATE data
	SET data.id = data.id * 1.2;
END;
/
CREATE USER 'usr2'@'%' IDENTIFIED BY 'Test@123';
CREATE DEFINER = `usr2`
PROCEDURE definer ()
SQL SECURITY DEFINER
AS
BEGIN
	UPDATE data
	SET data.id = data.id * 1.2;
END;
/
CREATE DEFINER = `usr2`
PROCEDURE definer1 ()
AS
BEGIN
	UPDATE data
	SET data.id = data.id * 1.2;
END;
/
CREATE TABLE user1 (
	id INTEGER PRIMARY KEY,
	username VARCHAR(50),
	password VARCHAR(50)
);
CREATE PROCEDURE proc16_while (
	IN insertcount INTEGER
)
AS
DECLARE i INTEGER DEFAULT 1;
BEGIN
	<<label>>WHILE i <= insertcount LOOP
		INSERT
		INTO user1 (id, username, "password")
		VALUES (i, concat('user-', i), '123456');
		i := i + 1;
	END LOOP label;
END
/
CREATE PROCEDURE yy_dd ()
AS
BEGIN
SELECT *
FROM test4;
END;
/